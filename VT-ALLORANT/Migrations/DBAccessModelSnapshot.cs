// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VT_ALLORANT.Controller;

#nullable disable

namespace VT_ALLORANT.Migrations
{
    [DbContext(typeof(DBAccess))]
    partial class DBAccessModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("TeamPlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamPlayer", (string)null);
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Discord.DiscordUser", b =>
                {
                    b.Property<int>("DiscordUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DiscordUserId");

                    b.ToTable("DiscordUser");
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team1TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team2TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WinnerTeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId");

                    b.HasIndex("Team1TeamId");

                    b.HasIndex("Team2TeamId");

                    b.HasIndex("WinnerTeamId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ValorantUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId");

                    b.HasIndex("DiscordUserId")
                        .IsUnique();

                    b.HasIndex("ValorantUserId")
                        .IsUnique();

                    b.ToTable("Player");
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LeaderId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeamId");

                    b.HasIndex("LeaderId")
                        .IsUnique();

                    b.ToTable("Team");
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Valorant.ValorantUser", b =>
                {
                    b.Property<int>("ValorantUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PUUID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TAG")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ValorantUserId");

                    b.ToTable("ValorantUser");
                });

            modelBuilder.Entity("TeamPlayer", b =>
                {
                    b.HasOne("VT_ALLORANT.Model.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VT_ALLORANT.Model.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Game", b =>
                {
                    b.HasOne("VT_ALLORANT.Model.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VT_ALLORANT.Model.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VT_ALLORANT.Model.Team", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerTeamId");

                    b.Navigation("Team1");

                    b.Navigation("Team2");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Player", b =>
                {
                    b.HasOne("VT_ALLORANT.Model.Discord.DiscordUser", "DiscordUser")
                        .WithOne()
                        .HasForeignKey("VT_ALLORANT.Model.Player", "DiscordUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VT_ALLORANT.Model.Valorant.ValorantUser", "ValorantUser")
                        .WithOne()
                        .HasForeignKey("VT_ALLORANT.Model.Player", "ValorantUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscordUser");

                    b.Navigation("ValorantUser");
                });

            modelBuilder.Entity("VT_ALLORANT.Model.Team", b =>
                {
                    b.HasOne("VT_ALLORANT.Model.Player", "Leader")
                        .WithOne()
                        .HasForeignKey("VT_ALLORANT.Model.Team", "LeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Leader");
                });
#pragma warning restore 612, 618
        }
    }
}
